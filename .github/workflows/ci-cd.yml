name: LabOdc System CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - { name: "user-service", path: "domain-services/user-service" }
          - { name: "company-service", path: "domain-services/company-service" }
          - { name: "notification-service", path: "domain-services/notification-service" }
          - { name: "checklist-service", path: "domain-services/checklist-service" }
          - { name: "email-service", path: "infrastructure/email-service" }
          - { name: "api-gateway", path: "infrastructure/api-gateway" }
          - { name: "eureka-server", path: "infrastructure/eureka-server" }
          - { name: "file-service", path: "infrastructure/file-service" }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Sửa lỗi: Ghi trực tiếp nội dung JSON từ secret vào file
      - name: Create Firebase service account file
        if: matrix.service.name == 'notification-service'
        run: |
          echo "Creating Firebase service account file from secret..."
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_JSON }}" > domain-services/notification-service/src/main/resources/firebase-service-account.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./${{ matrix.service.path }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.name }}:latest

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd /var/labodc/external
            docker compose -f docker-compose.api.yml pull
            docker compose -f docker-compose.api.yml up -d
            docker system prune -af
