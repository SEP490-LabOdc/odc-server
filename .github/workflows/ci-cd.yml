name: Main CI/CD (Auto on Push)

on:
  push:
    branches:
      - main

jobs:
  changes:
    name: Detect Changed Services
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.changes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Detect changed files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            user-service:
              - 'domain-services/user-service/**'
              - 'shared/odc-common/**'
            company-service:
              - 'domain-services/company-service/**'
              - 'shared/odc-common/**'
            notification-service:
              - 'domain-services/notification-service/**'
              - 'shared/odc-common/**'
            checklist-service:
              - 'domain-services/checklist-service/**'
              - 'shared/odc-common/**'
            email-service:
              - 'infrastructure/email-service/**'
              - 'shared/odc-common/**'
            api-gateway:
              - 'infrastructure/api-gateway/**'
              - 'shared/odc-common/**'
            eureka-server:
              - 'infrastructure/eureka-server/**'
              - 'shared/odc-common/**'

  build-and-push:
    name: Build Changed Services
    needs: changes
    if: needs.changes.outputs.services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.changes.outputs.services) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get service path
        id: get_path
        run: |
          if [ "${{ matrix.service }}" = "user-service" ]; then echo "path=domain-services/user-service" >> $GITHUB_OUTPUT; fi
          if [ "${{ matrix.service }}" = "company-service" ]; then echo "path=domain-services/company-service" >> $GITHUB_OUTPUT; fi
          if [ "${{ matrix.service }}" = "notification-service" ]; then echo "path=domain-services/notification-service" >> $GITHUB_OUTPUT; fi
          if [ "${{ matrix.service }}" = "checklist-service" ]; then echo "path=domain-services/checklist-service" >> $GITHUB_OUTPUT; fi
          if [ "${{ matrix.service }}" = "email-service" ]; then echo "path=infrastructure/email-service" >> $GITHUB_OUTPUT; fi
          if [ "${{ matrix.service }}" = "api-gateway" ]; then echo "path=infrastructure/api-gateway" >> $GITHUB_OUTPUT; fi
          if [ "${{ matrix.service }}" = "eureka-server" ]; then echo "path=infrastructure/eureka-server" >> $GITHUB_OUTPUT; fi

      - name: Create Firebase service account file
        if: matrix.service == 'notification-service'
        run: |
          cat << 'EOF' > domain-services/notification-service/src/main/resources/firebase-service-account.json
          ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_JSON }}
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./${{ steps.get_path.outputs.path }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  deploy:
    name: Deploy to VPS
    needs: build-and-push
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd /var/labodc/external
            docker compose -f docker-compose.api.yml pull
            docker compose -f docker-compose.api.yml up -d
            docker system prune -af
