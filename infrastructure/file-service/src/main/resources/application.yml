server:
  port: 8089

# Spring
spring:
  application:
    name: file-service

  # H2 Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_FILE_NAME:file_db}
    username: ${DB_USER:admin}
    password: ${DB_PASSWORD:12345}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  servlet:
    multipart:
          max-file-size: 10MB
          max-request-size: 10MB
          enabled: true

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://eureka:eureka123@localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    metadata-map:
      version: 1.0.0
      environment: ${spring.profiles.active}

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# Logging
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    reactor.netty: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/file-service.log

# AWS S3 Configuration
cloud:
  aws:
    region: ap-southeast-1
    s3:
      bucket-name:"${AWS_S3_BUCKET_NAME:file-service-bucket}"
    credentials:
      access-key: "${AWS_ACCESS_KEY_ID:your_access_key}"
      secret-key: "${AWS_SECRET_ACCESS_KEY:your_secret_key}"


# OpenAPI Configuration
springdoc:
  api-docs:
    path: /file-service/v3/api-docs
  swagger-ui:
    path: /file-service/swagger/index.html

